---
// import lottie from 'astro-integration-lottie';
import lottie from "lottie-web"
---

<section class="count" id="sec04">
  <div class="inner">
    <h2 class="titCount">社員旅行まで残り...</h2>
    <div class="countBody">
      <div class="dates days">
        <div class="timesNum">05</div>
        <div class="timesDay">日</div>
      </div>
      <div class="dates hours">
        <div class="timesNum">05</div>
        <div class="timesDay">時間</div>
      </div>
      <div class="dates minutes">
        <div class="timesNum">13</div>
        <div class="timesDay">分</div>
      </div>
      <div class="dates seconds">
        <div class="timesNum">28</div>
        <div class="timesDay">秒</div>
      </div>
    </div>
  </div>
  <div class="lottie" id="lottCount"></div>
</section>

<style lang="scss">
  .count{
    padding-top: 200px;
    padding-bottom: 200px;
    // overflow: hidden;
    position: relative;
    @media (max-width: 765px) {
      padding-top: 80px;
      padding-bottom: 80px;
      overflow: hidden;
  }
  }
  .lottie {
    width: 100%;
    z-index: 10;
    top: 0;
    opacity: 0.3;
    position: absolute;
    scale:1;
    @media (max-width: 765px) {
      scale: 1.5;
  }
  }
  .inner {
  max-width: 1120px;
  margin: 0 auto;
  position: relative;
  z-index: 500;
  padding: 0 40px;
  @media (max-width: 765px) {
    padding: 0 24px;
  }
  }
  .titCount{
    font-family: "Zen Kaku Gothic New";
    font-size: 40px;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    letter-spacing: 3.2px;
    gap: 12px;
    text-align:center;
    @media (max-width: 765px) {
      font-size: 30px;
    }
  }
  .countBody{
    display: flex;
    gap: 24px;
    justify-content: center;
    margin-top: 40px;
    position: relative;
    z-index: 100;
    padding: 80px;
    // background:#F2EEEF;
    background: rgba(242, 238, 239, 0.40);
    backdrop-filter: blur(4px);
    border-radius:16px;
    @media (max-width: 765px) {
      margin-top: 40px;
      gap: 8px;
      padding: 40px 16px;
  }
  }
  .dates{
    display: flex;
    gap: 8px;
    align-items: end;
  }
  .timesNum{
    font-family: "Zen Kaku Gothic New";
    font-size: 40px;
    font-style: normal;
    font-weight: 700;
    line-height: 120%; /* 48px */
    letter-spacing: 2px;
    width:60px;
    height:60px;
    border-radius:8px;
    display: grid;
    place-items:center;
    background:#fff;
    @media (max-width: 765px) {
      font-size: 32px;
      width:50px;
      height:50px;
  }
  }
  .timesDay{
    font-family: "Zen Kaku Gothic New";
    font-size: 16px;
    font-style: normal;
    font-weight: 700;
    line-height: 120%; /* 19.2px */
    letter-spacing: 0.8px;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // 期日を設定
    const targetDate = new Date('2024-10-04T00:00:00').getTime();

    // カウントダウンの更新
    function updateCountdown() {
      const now = new Date().getTime();
      const timeLeft = targetDate - now;

      // 日時要素を取得
      const daysElement = document.querySelector('.days .timesNum');
      const hoursElement = document.querySelector('.hours .timesNum');
      const minutesElement = document.querySelector('.minutes .timesNum');
      const secondsElement = document.querySelector('.seconds .timesNum');

      if (timeLeft >= 0) {
        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        // カウントダウンの時間を更新 (null チェック)
        if (daysElement) daysElement.textContent = String(days).padStart(2, '0');
        if (hoursElement) hoursElement.textContent = String(hours).padStart(2, '0');
        if (minutesElement) minutesElement.textContent = String(minutes).padStart(2, '0');
        if (secondsElement) secondsElement.textContent = String(seconds).padStart(2, '0');
      } else {
        // 期日が過ぎたらカウントダウンを終了し、全て00に (null チェック)
        if (daysElement) daysElement.textContent = '00';
        if (hoursElement) hoursElement.textContent = '00';
        if (minutesElement) minutesElement.textContent = '00';
        if (secondsElement) secondsElement.textContent = '00';
      }
    }

    // 1秒ごとにカウントダウンを更新
    setInterval(updateCountdown, 1000);
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {// @ts-ignore
    const logoAnimation = lottie.loadAnimation({
      container: document.getElementById('lottCount'),
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: '/json/data.json',
    });
    logoAnimation.setSpeed(1);
  });
</script>

